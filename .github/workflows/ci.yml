---
name: CI build

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      MIX_ENV: test

    strategy:
      matrix:
        elixir: ['1.14']
        otp: ['25']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup elixir
      id: setup-elixir
      uses: erlef/setup-beam@v1
      with:
        otp-version: ${{ matrix.otp }}
        elixir-version: ${{ matrix.elixir }}
        install-rebar: true
        install-hex: true

    - name: Get cache
      uses: actions/cache@v3
      with:
        path: |
          deps/
          _build/
        key: ${{ runner.os }}-${{ steps.setup-elixir.outputs.otp-version }}-${{ steps.setup-elixir.outputs.elixir-version }}-${{ hashFiles('**/mix.lock') }}

    - name: Install dependencies
      run: |
        mix deps.get
        mix compile
        mix dialyzer --plt



  lint:
    needs: build

    runs-on: ubuntu-latest

    env:
      MIX_ENV: test

    strategy:
      matrix:
        elixir: ['1.14']
        otp: ['25']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup elixir
      id: setup-elixir
      uses: erlef/setup-beam@v1
      with:
        otp-version: ${{ matrix.otp }}
        elixir-version: ${{ matrix.elixir }}
        install-rebar: true
        install-hex: true

    - name: Get cache
      uses: actions/cache@v3
      with:
        path: |
          deps/
          _build/
        key: ${{ runner.os }}-${{ steps.setup-elixir.outputs.otp-version }}-${{ steps.setup-elixir.outputs.elixir-version }}-${{ hashFiles('**/mix.lock') }}

    - uses: reviewdog/action-setup@v1
      with:
        reviewdog_version: latest

    - run: mix format --check-formatted
    - run: >
        mix credo suggest --strict --format=flycheck |
        reviewdog -efm="%f:%l:%c: %t: %m" -efm="%f:%l: %t: %m" -name="credo" -reporter="github-pr-check"
      env:
        REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - run: mix dialyzer --no-check --ignore-exit-status --format github




  test:
    needs: build

    runs-on: ubuntu-latest

    env:
      MIX_ENV: test

    strategy:
      matrix:
        elixir: ['1.14']
        otp: ['25']

    services:
      db:
        image: postgres:15-alpine
        ports: ['5432:5432']
        env:
          POSTGRES_PASSWORD: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup elixir
      id: setup-elixir
      uses: erlef/setup-beam@v1
      with:
        otp-version: ${{ matrix.otp }}
        elixir-version: ${{ matrix.elixir }}
        install-rebar: true
        install-hex: true

    - name: Get cache
      uses: actions/cache@v3
      with:
        path: |
          deps/
          _build/
        key: ${{ runner.os }}-${{ steps.setup-elixir.outputs.otp-version }}-${{ steps.setup-elixir.outputs.elixir-version }}-${{ hashFiles('**/mix.lock') }}

    - name: Setup environment
      run: |
        mix ecto.create
        mix ecto.migrate

    - name: Run tests and coverage
      run: mix coveralls.github
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

